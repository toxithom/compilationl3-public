0 : ( 4 )		call	main	;
1 : ( 2 )		mov	ebx,	0	; valeur de retour du programme
2 : ( 3 )		mov	eax,	1	;
3 : ( 4 )		int 0x80	;
4 : ( 5 )	main :	push	ebp	;sauvegarde la valeur de ebp
5 : ( 6 )		mov	ebp,	esp	;nouvelle valeur de ebp
6 : ( 7 )		sub	esp,	4	;allocation des variables locales
7 : ( 8 )		mov	dword [ebp-4*1],	0	;Affect
8 : ( 9 )		mov	r0,	dword [ebp-4*1]	;
9 : ( 10 )		add	r0,	0	;
10 : ( 11 )		mov	dword [t+4*r0],	0	;Affect
11 : ( 12 )		mov	r1,	dword [ebp-4*1]	;
12 : ( 13 )		add	r1,	1	;
13 : ( 14 )		mov	dword [t+4*r1],	1	;Affect
14 : ( 15 )		mov	r2,	dword [ebp-4*1]	;
15 : ( 16 )		add	r2,	2	;
16 : ( 17 )		mov	dword [t+4*r2],	2	;Affect
17 : ( 18 )		mov	r3,	dword [ebp-4*1]	;
18 : ( 19 )		add	r3,	3	;
19 : ( 20 )		mov	dword [t+4*r3],	3	;Affect
20 : ( 21 )		mov	r4,	dword [ebp-4*1]	;
21 : ( 22 )		add	r4,	4	;
22 : ( 23 )		mov	dword [t+4*r4],	4	;Affect
23 : ( 24 )		mov	r5,	dword [ebp-4*1]	;
24 : ( 25 )		add	r5,	0	;
25 : ( 26 )		mov	eax,	dword [t+4*r5]	;Write 1
26 : ( )		call	iprintLF	;Write 2
27 : ( 28 )		mov	r6,	dword [ebp-4*1]	;
28 : ( 29 )		add	r6,	1	;
29 : ( 30 )		mov	eax,	dword [t+4*r6]	;Write 1
30 : ( )		call	iprintLF	;Write 2
31 : ( 32 )		mov	r7,	dword [ebp-4*1]	;
32 : ( 33 )		add	r7,	2	;
33 : ( 34 )		mov	eax,	dword [t+4*r7]	;Write 1
34 : ( )		call	iprintLF	;Write 2
35 : ( 36 )		mov	r8,	dword [ebp-4*1]	;
36 : ( 37 )		add	r8,	3	;
37 : ( 38 )		mov	eax,	dword [t+4*r8]	;Write 1
38 : ( )		call	iprintLF	;Write 2
39 : ( 40 )		mov	r9,	dword [ebp-4*1]	;
40 : ( 41 )		add	r9,	4	;
41 : ( 42 )		mov	eax,	dword [t+4*r9]	;Write 1
42 : ( )		call	iprintLF	;Write 2
43 : ( 44 )		add	esp,	4	;d√©sallocation des variables locales
44 : ( 45 )		pop	ebp	;restaure la valeur de ebp
45 : ( )		ret	;
