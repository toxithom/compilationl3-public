0 : ( 4 )		call	main	;
1 : ( 2 )		mov	ebx,	0	; valeur de retour du programme
2 : ( 3 )		mov	eax,	1	;
3 : ( 4 )		int 0x80	;
4 : ( 5 )	main :	push	ebp	;sauvegarde la valeur de ebp
5 : ( 6 )		mov	ebp,	esp	;nouvelle valeur de ebp
6 : ( 7 )		sub	esp,	0	;allocation des variables locales
7 : ( 8 )		mov	r2,	2	;
8 : ( 9 )		imul	r2,	3	;
9 : ( 10 )		mov	r3,	1	;
10 : ( 11 )		add	r3,	r2	;
11 : ( 12 )		mov	r1,	1	;Affect
12 : ( 13 )		cmp	r3,	0	;JumpIfLess 1
13 : ( 14 15 )		jl	l2	;JumpIfLess 2
14 : ( 15 )		mov	r1,	0	;Affect
15 : ( 16 )	l2 :	mov	r5,	2	;
16 : ( 17 )		add	r5,	2	;
17 : ( 18 )		mov	r4,	1	;Affect
18 : ( 19 )		cmp	r5,	0	;JumpIfLess 1
19 : ( 20 21 )		jl	l3	;JumpIfLess 2
20 : ( 21 )		mov	r4,	0	;Affect
21 : ( 22 )	l3 :	cmp	r1,	0	;JumpIfEqual 1
22 : ( 23 27 )		je	l1	;JumpIfEqual 2
23 : ( 24 )		cmp	r4,	0	;JumpIfEqual 1
24 : ( 25 27 )		je	l1	;JumpIfEqual 2
25 : ( 26 )		mov	r0,	1	;Affect
26 : ( 28 )		jmp	l0	;Jump
27 : ( 28 )	l1 :	mov	r0,	0	;Affect
28 : ( 29 )	l0 :	mov	eax,	r0	;Write 1
29 : ( )		call	iprintLF	;Write 2
30 : ( 31 )		add	esp,	0	;d√©sallocation des variables locales
31 : ( 32 )		pop	ebp	;restaure la valeur de ebp
32 : ( )		ret	;
